# 指定日志级别以及输出目的地(appender)
###格式为[level] ,appender1，appender2，……
# 根日志的输出级别为INFO,输出到stdout,errorfile,infofile
# com.markey.messageboard的输出级别为DEBUG
# com.markey.messageboard.springtest的输出界别为INFO
log4j.rootLogger=debug,stdout,debugfile,infofile,warnfile,errorfile
# log4j.logger.com.markey.messageboard=DEBUG
# log4j.logger.com.markey.messageboard.springtest=info
 
#console config
###定义该appender的输出目的地为控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender 
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# log4j.appender.stdout.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [ %p ] [ %t ] %l - %m%n
log4j.appender.stdout.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [%p][%C{1}::%M(%L)] - %m%n

#InfoFile config
###定义该appender的输出目的地为每日一个新的日志文件
log4j.appender.debugfile=org.apache.log4j.DailyRollingFileAppender
###输出文件路径
# log4j.appender.debugfile.File= ${webapp.root}/WEB-INF/logs/debug.log
log4j.appender.debugfile.File= D:/log4j/logs2/debug.log
###该appender(输出目的地)只有INFO以上级别的日志才会被输出
log4j.appender.debugfile.Threshold=DEBUG
###指定日期格式
log4j.appender.debugfile.DatePattern='.'yyyy-MM-dd
###指定日志文件以追加方式写入
log4j.appender.debugfile.Append=true 
log4j.appender.debugfile.layout=org.apache.log4j.PatternLayout 
log4j.appender.debugfile.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [ %p ] [ %t ] %l - %m%n
# log4j.appender.debugfile.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [ %p ] - %m%n

#InfoFile config
###定义该appender的输出目的地为每日一个新的日志文件
log4j.appender.infofile=org.apache.log4j.DailyRollingFileAppender
###输出文件路径
# log4j.appender.infofile.File= ${webapp.root}/WEB-INF/logs/info.log
log4j.appender.infofile.File= D:/log4j/logs2/info.log
###该appender(输出目的地)只有INFO以上级别的日志才会被输出
log4j.appender.infofile.Threshold=INFO
###指定日期格式
log4j.appender.infofile.DatePattern='.'yyyy-MM-dd
###指定日志文件以追加方式写入
log4j.appender.infofile.Append=true 
log4j.appender.infofile.layout=org.apache.log4j.PatternLayout 
log4j.appender.infofile.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [ %p ] [ %t ] %l - %m%n
# log4j.appender.infofile.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [ %p ] - %m%n

#WarnFile config
###定义该appender的输出目的地为每日一个新的日志文件
log4j.appender.warnfile=org.apache.log4j.DailyRollingFileAppender
###输出文件路径
# log4j.appender.warnfile.File= ${webapp.root}/WEB-INF/logs/warning.log
log4j.appender.warnfile.File= D:/log4j/logs2/warning.log
###该appender(输出目的地)只有WARN以上级别的日志才会被输出
log4j.appender.warnfile.Threshold=WARN
###指定日期格式
log4j.appender.warnfile.DatePattern='.'yyyy-MM-dd
###指定日志文件以追加方式写入
log4j.appender.warnfile.Append=true 
log4j.appender.warnfile.layout=org.apache.log4j.PatternLayout 
log4j.appender.warnfile.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [ %p ] [ %t ] %l - %m%n
# log4j.appender.warnfile.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [ %p ] - %m%n

#Errorfile config
###定义该appender的输出目的地为每日一个新的日志文件
log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender
###输出文件路径
# log4j.appender.errorfile.File= ${webapp.root}/WEB-INF/logs/error.log
log4j.appender.errorfile.File= D:/log4j/logs2/error.log
###该appender(输出目的地)只有ERROR以上级别的日志才会被输出
log4j.appender.errorfile.Threshold=ERROR
###指定日期格式
log4j.appender.errorfile.DatePattern='.'yyyy-MM-dd
###指定日志文件以追加方式写入
log4j.appender.errorfile.Append=true 
log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout 
log4j.appender.errorfile.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [ %p ] [ %t ] %l - %m%n
# log4j.appender.errorfile.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} [ %p ] - %m%n

#关闭以下日志
log4j.logger.com.mchange.v2=ERROR
log4j.logger.com.mchange.v2.c3p0=ERROR
log4j.logger.org.springframework=ERROR

log4j.logger.org.mybatis.spring=INFO
log4j.logger.org.apache.ibatis=INFO
log4j.logger.org.apache.ibatis.jdbc.ScriptRunner=INFO